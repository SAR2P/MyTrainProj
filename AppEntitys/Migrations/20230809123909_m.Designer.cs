// <auto-generated />
using System;
using AppEntitys.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppEntitys.Migrations
{
    [DbContext(typeof(ContextM))]
    [Migration("20230809123909_m")]
    partial class m
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppEntitys.Models.CustomersInformationClass", b =>
                {
                    b.Property<int>("CustomersInformationClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomersInformationClassId"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Job")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PhoneNumber")
                        .HasColumnType("float");

                    b.HasKey("CustomersInformationClassId");

                    b.ToTable("CustomerTable");
                });

            modelBuilder.Entity("AppEntitys.Models.HeavyVehicleRentalReportClass", b =>
                {
                    b.Property<int>("HeavyVehicleRentalReportClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HeavyVehicleRentalReportClassId"));

                    b.Property<int>("CustomersInformationClassId")
                        .HasColumnType("int");

                    b.Property<int>("HeavyVehiclesClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReciveTheCarDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RentDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("RentPrice")
                        .HasColumnType("float");

                    b.HasKey("HeavyVehicleRentalReportClassId");

                    b.HasIndex("CustomersInformationClassId");

                    b.HasIndex("HeavyVehiclesClassId");

                    b.ToTable("heavyVehicleRentalReportTable");
                });

            modelBuilder.Entity("AppEntitys.Models.HeavyVehicleSalesReportClass", b =>
                {
                    b.Property<int>("HeavyVehicleSalesReportClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HeavyVehicleSalesReportClassId"));

                    b.Property<int>("CustomersInformationClassId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SalesDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<int>("vehicleClassHeavyVehiclesClassId")
                        .HasColumnType("int");

                    b.HasKey("HeavyVehicleSalesReportClassId");

                    b.HasIndex("CustomersInformationClassId");

                    b.HasIndex("vehicleClassHeavyVehiclesClassId");

                    b.ToTable("heavyVehicleSalesTable");
                });

            modelBuilder.Entity("AppEntitys.Models.HeavyVehiclesClass", b =>
                {
                    b.Property<int>("HeavyVehiclesClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HeavyVehiclesClassId"));

                    b.Property<string>("CarBrand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("CarsBuyPriceForUs")
                        .HasColumnType("float");

                    b.Property<byte>("CarsCondition")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CarsDateModel")
                        .HasColumnType("datetime2");

                    b.Property<double>("CarsRentPrice")
                        .HasColumnType("float");

                    b.Property<double>("CarsSellPrice")
                        .HasColumnType("float");

                    b.HasKey("HeavyVehiclesClassId");

                    b.ToTable("HeavyVehiclesTable");
                });

            modelBuilder.Entity("AppEntitys.Models.LightCarRentalReportClass", b =>
                {
                    b.Property<int>("LightCarRentalReportClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LightCarRentalReportClassId"));

                    b.Property<int>("CustomersInformationClassId")
                        .HasColumnType("int");

                    b.Property<int>("LightCarsClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReciveTheCarDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RentDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("RentPrice")
                        .HasColumnType("float");

                    b.HasKey("LightCarRentalReportClassId");

                    b.HasIndex("CustomersInformationClassId");

                    b.HasIndex("LightCarsClassId");

                    b.ToTable("lightCarRentalsTable");
                });

            modelBuilder.Entity("AppEntitys.Models.LightCarSalesReportClass", b =>
                {
                    b.Property<int>("LightCarSalesReportClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LightCarSalesReportClassId"));

                    b.Property<int>("CustomersInformationClassId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LightCarsClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SalesDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.HasKey("LightCarSalesReportClassId");

                    b.HasIndex("CustomersInformationClassId");

                    b.HasIndex("LightCarsClassId");

                    b.ToTable("LightCarSalesTable");
                });

            modelBuilder.Entity("AppEntitys.Models.LightCarsClass", b =>
                {
                    b.Property<int>("LightCarsClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LightCarsClassId"));

                    b.Property<string>("CarBrand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("CarsBuyPriceForUs")
                        .HasColumnType("float");

                    b.Property<byte>("CarsCondition")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CarsDateModel")
                        .HasColumnType("datetime2");

                    b.Property<double>("CarsRentPrice")
                        .HasColumnType("float");

                    b.Property<double>("CarsSellPrice")
                        .HasColumnType("float");

                    b.HasKey("LightCarsClassId");

                    b.ToTable("lightCarsTable");
                });

            modelBuilder.Entity("AppEntitys.Models.HeavyVehicleRentalReportClass", b =>
                {
                    b.HasOne("AppEntitys.Models.CustomersInformationClass", "customers")
                        .WithMany("heavyVehicleRentals")
                        .HasForeignKey("CustomersInformationClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppEntitys.Models.HeavyVehiclesClass", "heavyVehicles")
                        .WithMany("RentReportEntity")
                        .HasForeignKey("HeavyVehiclesClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("customers");

                    b.Navigation("heavyVehicles");
                });

            modelBuilder.Entity("AppEntitys.Models.HeavyVehicleSalesReportClass", b =>
                {
                    b.HasOne("AppEntitys.Models.CustomersInformationClass", "customer")
                        .WithMany("heavyVehicleSales")
                        .HasForeignKey("CustomersInformationClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppEntitys.Models.HeavyVehiclesClass", "vehicleClass")
                        .WithMany("SaleReportEntity")
                        .HasForeignKey("vehicleClassHeavyVehiclesClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("customer");

                    b.Navigation("vehicleClass");
                });

            modelBuilder.Entity("AppEntitys.Models.LightCarRentalReportClass", b =>
                {
                    b.HasOne("AppEntitys.Models.CustomersInformationClass", "customer")
                        .WithMany("lightCarRentalReports")
                        .HasForeignKey("CustomersInformationClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppEntitys.Models.LightCarsClass", "lightCar")
                        .WithMany("RentReportEntity")
                        .HasForeignKey("LightCarsClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("customer");

                    b.Navigation("lightCar");
                });

            modelBuilder.Entity("AppEntitys.Models.LightCarSalesReportClass", b =>
                {
                    b.HasOne("AppEntitys.Models.CustomersInformationClass", "customer")
                        .WithMany("lightCarSales")
                        .HasForeignKey("CustomersInformationClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppEntitys.Models.LightCarsClass", "LightCar")
                        .WithMany("SaleReportEntity")
                        .HasForeignKey("LightCarsClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LightCar");

                    b.Navigation("customer");
                });

            modelBuilder.Entity("AppEntitys.Models.CustomersInformationClass", b =>
                {
                    b.Navigation("heavyVehicleRentals");

                    b.Navigation("heavyVehicleSales");

                    b.Navigation("lightCarRentalReports");

                    b.Navigation("lightCarSales");
                });

            modelBuilder.Entity("AppEntitys.Models.HeavyVehiclesClass", b =>
                {
                    b.Navigation("RentReportEntity");

                    b.Navigation("SaleReportEntity");
                });

            modelBuilder.Entity("AppEntitys.Models.LightCarsClass", b =>
                {
                    b.Navigation("RentReportEntity");

                    b.Navigation("SaleReportEntity");
                });
#pragma warning restore 612, 618
        }
    }
}
